name: Build and Push Changed Docker Images

on:
  push:
    branches:
      - master

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: '**/Dockerfile'

      - name: Generate matrix of changed images
        id: changes
        run: |
          IMAGES=()
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir_path=$(dirname "$file")
            name=$(cut -d'/' -f1 <<< "$dir_path")
            version=$(cut -d'/' -f2 <<< "$dir_path")

            image_json_amd64=$(printf '{"name": "%s", "version": "%s", "os": "%s"}' "$name" "$version" ubuntu-24.04)
            image_json_arm64=$(printf '{"name": "%s", "version": "%s", "os": "%s"}' "$name" "$version" ubuntu-24.04-arm)
            IMAGES+=("$image_json_amd64", "$image_json_arm64")
          done

          IMAGE_LIST=$(IFS=,; echo "${IMAGES[*]}")

          printf 'matrix={"include":[%s]}\n' "$IMAGE_LIST" >> "$GITHUB_OUTPUT"

  build:
    needs: detect-changes
    runs-on: ${{ matrix.os }}
    if: ${{ needs.detect-changes.outputs.matrix != '[]' }}
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    outputs:
      json: ${{ steps.matrix-output.outputs.json }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        id: build-push
        with:
          context: ${{ matrix.name }}/${{ matrix.version }}
          file: ${{ matrix.name }}/${{ matrix.version }}/Dockerfile
          tags: ${{ vars.DOCKERHUB_ORG }}/${{ matrix.name }}
          outputs: push-by-digest=true,type=image,push=true

      - uses: beacon-biosignals/matrix-output@v1
        id: matrix-output
        with:
          yaml: |
            name: ${{ vars.DOCKERHUB_ORG }}/${{ matrix.name }}:${{ matrix.version }}
            digest_name: ${{ vars.DOCKERHUB_ORG }}/${{ matrix.name }}@${{ steps.build-push.outputs.digest }}

  stitch-multiarch:
    needs: [detect-changes, build]
    runs-on: ubuntu-24.04
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push multi-arch image
        run: |
          tag=${{ vars.DOCKERHUB_ORG }}/${{ matrix.name }}:${{ matrix.version }}
          docker buildx imagetools create \
            --tag $tag \
            $(echo '${{ needs.build.outputs.json }}' | jq ".[] | select(.name == \"$tag\") | .digest_name" -r) \
