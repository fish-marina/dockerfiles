name: Build and Push Changed Docker Images

on:
  push:
    branches:
      - master

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: '**/Dockerfile'

      - name: Generate matrix of changed images
        id: changes
        run: |
          IMAGES=()
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir_path=$(dirname "$file")
            name=$(cut -d'/' -f1 <<< "$dir_path")
            version=$(cut -d'/' -f2 <<< "$dir_path")

            image_json=$(printf '{"name": "%s", "version": "%s"}' "$name" "$version")
            IMAGES+=("$image_json")
          done

          IMAGE_LIST=$(IFS=,; echo "${IMAGES[*]}")

          printf 'matrix={"include":[%s]}\n' "$IMAGE_LIST" >> "$GITHUB_OUTPUT"

  build-amd64:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.matrix != '{}' }}
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.name }}/${{ matrix.version }}
          file: ${{ matrix.name }}/${{ matrix.version }}/Dockerfile
          platforms: linux/amd64
          push: false
          outputs: type=oci,dest=amd64.tar

      - name: Upload AMD64 image artifact
        uses: actions/upload-artifact@v4
        with:
          name: amd64-image-${{ matrix.name }}-${{ matrix.version }}
          path: amd64.tar

  build-arm64:
    needs: detect-changes
    runs-on: ubuntu-24.04-arm
    if: ${{ needs.detect-changes.outputs.matrix != '{}' }}
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.name }}/${{ matrix.version }}
          file: ${{ matrix.name }}/${{ matrix.version }}/Dockerfile
          platforms: linux/arm64
          push: false
          outputs: type=oci,dest=arm64.tar

      - name: Upload ARM64 image artifact
        uses: actions/upload-artifact@v4
        with:
          name: arm64-image-${{ matrix.name }}-${{ matrix.version }}
          path: arm64.tar

  push-multiarch:
    needs: [detect-changes, build-amd64, build-arm64]
    runs-on: ubuntu-24.04
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download AMD64 image artifact
        uses: actions/download-artifact@v4
        with:
          name: amd64-image-${{ matrix.name }}-${{ matrix.version }}

      - name: Download ARM64 image artifact
        uses: actions/download-artifact@v4
        with:
          name: arm64-image-${{ matrix.name }}-${{ matrix.version }}

      - name: Load images into Docker
        run: |
          docker load --input amd64.tar
          docker load --input arm64.tar

      - name: Push multi-arch image
        run: |
          docker buildx create --use
          docker buildx imagetools create \
            --tag ${{ vars.DOCKERHUB_ORG }}/${{ matrix.name }}:${{ matrix.version }} \
            $(docker images --format "{{.Repository}}:{{.Tag}}" | grep ${{ vars.DOCKERHUB_ORG }}/${{ matrix.name }} | awk '{print "--amend "$1}')

          docker buildx imagetools inspect ${{ vars.DOCKERHUB_ORG }}/${{ matrix.name }}:${{ matrix.version }}
