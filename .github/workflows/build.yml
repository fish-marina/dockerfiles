name: Build and Push Docker Images

on:
  push:
    branches:
      - master

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine Changed Images
        id: set-matrix
        shell: bash
        run: |
          set -exo pipefail
          echo "Determining which image directories have changed..."
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "No previous commit â€“ building all images."
            dirs=$(find . -mindepth 3 -maxdepth 3 -type f -name Dockerfile -printf '%h\n' | sed 's|^\./||')
          else
            changed_files=$(git diff --name-only "${{ github.event.before }}" $GITHUB_SHA)
            echo "Changed files: $changed_files"
            dirs=$(echo "$changed_files" | grep "/" | awk -F/ '{print $1"/"$2}' | sort -u)
          fi

          if [ -z "$dirs" ]; then
            echo "No image directories have changed. Exiting."
            echo 'matrix={"include":[]}' >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Directories to build: $dirs"

          matrix="{\"include\":["
          first=1
          for d in $dirs; do
            image=$(echo $d | cut -d'/' -f1)
            tag=$(echo $d | cut -d'/' -f2)
            if [ $first -eq 1 ]; then
              first=0
            else
              matrix+=","
            fi
            matrix+="{\"directory\":\"$d\", \"image_name\":\"$image\", \"tag\":\"$tag\"}"
          done
          matrix+="]}"
          echo "Matrix JSON: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@3
      # - name: Log in to Docker Registry
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ vars.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Image
        run: |
          echo docker buildx build -t ${{ matrix.image_name }}:${{ matrix.tag }} ${{ matrix.directory }} --platform linux/arm64,linux/amd64 --push
